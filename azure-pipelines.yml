# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-latest'

steps:
- checkout: self  # self represents the repo where the initial Pipelines YAML file was found
  clean: all  # whether to fetch clean each time
  path: '$(BotDirectoryName)/'  # path to check out source code, relative to the agent's build directory (e.g. \_work\1)
  
# Install Nuget
- task: NuGetToolInstaller@1
  inputs:
    versionSpec: '5.2.0'

# Restore nuget packages
- task: NuGetCommand@2
  inputs:
    command: 'restore'
    restoreSolution: '$(Agent.BuildDirectory)/$(BotDirectoryName)/TestDiscordBot.sln'
    feedsToUse: 'config'
    nugetConfigPath: '$(Agent.BuildDirectory)/$(BotDirectoryName)/NuGet.config'

# Build solution with VS 2019
- task: VSBuild@1
  inputs:
    solution: '$(Agent.BuildDirectory)/$(BotDirectoryName)/TestDiscordBot.sln'
    vsVersion: '16.0'
    restoreNugetPackages: false
    msbuildArchitecture: 'x64'

# Publish .NET Core App
- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '$(Agent.BuildDirectory)/$(BotDirectoryName)/TestDiscordBot/TestDiscordBot.csproj'
    arguments: '--no-build -o $(Agent.BuildDirectory)/$(BotDirectoryName)/artifacts/'
    zipAfterPublish: false

# Publish artifacts
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Agent.BuildDirectory)/$(BotDirectoryName)/artifacts/'
    ArtifactName: 'Published Bot'
    publishLocation: 'Container'